Radiant Multisite
=================

Hi, I'm a [Radiant](http://github.com/radiant/radiant/) distribution that can serve multiple sites from a single installation and I already comes with a bunch of extensions and plugins installed.

Status
------

I'm far from completed and there may be some problems especially with the multiple site handling and some incompatibilities between some extensions. **FORK ME** and help me beeing a good Radiant Multisite distribution. This will be especially interesing with the upcoming Radiant 0.9 release and the new Blade UI that will us allow to incorporate further extensions in a user friendly way.

Why?
----

There are many well engineered extensions for Radiant that works well in isolation on a bare Radiant installation, but in combination of many other extensions there sometimes are some interference of the massive use of meta programming. 

Extensions
----------

Extensions are included as git submodules and managed by Ray:

* [ray](http://github.com/johnmuhl/radiant-ray-extension/)

Single site extensions: 

* [admin_breadcrumbs](http://github.com/saturnflyer/radiant-admin_breadcrumbs-extension/)
* [blog](http://github.com/saturnflyer/radiant-blog-extension/)
* [change_author](http://github.com/saturnflyer/radiant-change_author-extension/)
* [comments](http://github.com/tricycle/radiant-comments-extension/)
* [conditional_tags](http://github.com/SwankInnovations/radiant-conditional-tags-extension/)
* [copy_move](http://github.com/pilu/radiant-copy-move/)
* [dav](http://github.com/netzpirat/radiant-dav-extension)
* [gallery](http://github.com/pilu/radiant-gallery/)
* [help](http://github.com/saturnflyer/radiant-help-extension/)
* [index_page](http://github.com/jomz/radiant-index-page-extension/)
* [language_redirect](http://github.com/intinig/radiant_language_redirect_extension/)
* [navigation_tags](http://github.com/derencius/navigation_tags/)
* [page_preview](http://github.com/tricycle/radiant-page-preview-extension/)
* [paginate](http://github.com/Aissac/radiant-paginate-extension/)
* [paperclipped](http://github.com/kbingman/paperclipped/)
* [reorder](http://github.com/radiant/radiant-reorder-extension/)
* [search](http://github.com/radiant/radiant-search-extension/)
* [seo_help](http://github.com/saturnflyer/radiant-seo_help-extension/)
* [settings](http://github.com/Squeegy/radiant-settings/)
* [sibling_tags](http://github.com/nelstrom/radiant-sibling-tags-extension/)
* [sns](http://github.com/radiant/radiant-sns-extension/)
* [sns_minifier](http://github.com/SwankInnovations/radiant-sns-minifier-extension/)
* [sns_sass_filter](http://github.com/SwankInnovations/radiant-sns-sass-filter-extension/)
* [tags](http://github.com/jomz/radiant-tags-extension/)
* [wym_editor_filter](http://github.com/jomz/radiant-wym-editor-filter-extension/)

The following extensions are handling the multi site behaviour:

* [multi_site](http://github.com/spanner/radiant-multi-site-extension)
* [scoped_admin](http://github.com/spanner/radiant-scoped-admin-extension)
* [search_multi_site](http://github.com/RSpace/radiant-search_multi_site-extension/)
* [gallery_multisite](http://github.com/netzpirat/radiant-gallery-multisite-extension/)
* [paperclipped_multisite](http://github.com/kbingman/radiant-paperclipped_multisite-extension/)
* [sns_multisite](http://github.com/netzpirat/radiant-sns-multisite-extension/)
* [tags_multi_site](http://github.com/RSpace/radiant-tags_multi_site-extension/)

Monitoring
----------

The multi site installation uses [Exceptional](http://www.getexceptional.com) for exception  and [New Relic](http://www.newrelic.com/) for performance monitoring.

* [exceptional](http://github.com/contrast/exceptional/)
* [rpm](http://github.com/newrelic/rpm)

The configuration files will be generated by the `deploy:setup` Capistrano task and must be updated with your personal credentials afterwards. You'll find these files in the `/shared/config` directory.

Installation
------------

Get the code:

	git clone git://github.com/netzpirat/radiant-multisite.git
	cd radiant-multisite

Get the extensions and plugins:
	
	git submodules init
	git submodules update

Install the needed gems:
	
	rake gems:install
	
Configure the database credentials by copying `conf/database.sample.yml` to database.yml and modify it to your needs. That applies to `conf/exceptional.sample.yml` and `conf/newrelic.sample.yml` too: copy these to `conf/exceptional.yml` and `conf/newrelic.yml` and add your personal API key.

Create the database and tables:

    rake db:create
    rake db:bootstrap

Run it:

    ./script/server

For detailed information have a look at the [Radiant Wiki](http://wiki.github.com/radiant/radiant), or 

Deployment
----------

Deploy me with Capistrano! I'm cooking with these recipes:

* radiant.rb - Handles the bootstrap and extension migration for Radiant
* configs.rb - Handles database, exceptional and rpm configuration
* mod_rails.rb - Handles start, stop adn restart of Apache and Passenger aka. mod_rails 
* [sync.rb](http://gist.github.com/111597) - Handles synchronisation of different asset folders and a MySql database

First you have to copy the general deploy definition sample file from `conf/deploy.sample.rb` to `conf/deploy.rb` and the production configuration sample file from `conf/deploy/production.sample.rb` to `conf/deploy/production.rb` and modifiy those settings to your server environment. You can easily add new deployment target by copy the production sample file to for example `conf/staging.rb`

The you can setup the deploy environment

	cap production deploy:setup

For the first time cold deploy the app:

	cap deploy:cold
	
The next deploy can be done by simply

	cap deploy
	
Synchronisation
---------------

When you add also the remote system database credentials in your (unversionied) database.yml, you can synchronize the database and folders between different environments:

For example copy your local database to production and sync assets and galleries, simply do a

	cap poduction sync:up
	
You can snyc to an environment (up) or from an environment (down). If you wanna sync the local and staging environment to the latest production data:

	cap production sync:down
	cap staging sync:up

Backups of the old data will be kept in the `shared/sync` directory.
	
License
-------

This Radiant distribution is released under the MIT license, see the [LICENSE](master/LICENSE) for more
information. Plugins and Extensions may have another license, please see the appropriate extension or plugin folder.