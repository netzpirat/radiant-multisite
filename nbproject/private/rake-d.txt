db\:abort_if_pending_migrations=Raises an error if there are pending migrations / Raises an error if there are pending migrations
db\:bootstrap=Bootstrap your database for Radiant.
db\:charset=Retrieves the charset for the current environment's database / Retrieves the charset for the current environment's database
db\:collation=Retrieves the collation for the current environment's database / Retrieves the collation for the current environment's database
db\:create=Create the database defined in config/database.yml for the current RAILS_ENV / Create the database defined in config/database.yml for the current RAILS_ENV / Create the database defined in config/database.yml for the current RAILS_ENV
db\:create\:all=Create all the local databases defined in config/database.yml / Create all the local databases defined in config/database.yml
db\:drop=Drops the database for the current RAILS_ENV / Drops the database for the current RAILS_ENV / Drops the database for the current RAILS_ENV
db\:drop\:all=Drops all the local databases defined in config/database.yml / Drops all the local databases defined in config/database.yml
db\:export=Export a database template to db/export.yml. Specify the TEMPLATE environment variable to use a different file.
db\:fixtures\:identify=Search for a fixture given a LABEL or ID. / Search for a fixture given a LABEL or ID.
db\:fixtures\:load=Load fixtures into the current environment's database.  Load specific fixtures using FIXTURES=x,y / Load fixtures into the current environment's database.  Load specific fixtures using FIXTURES=x,y
db\:import=Import a database template from db/export.yml. Specify the TEMPLATE environment variable to load a different template. This is not intended for new installations, but restoration from previous exports.
db\:migrate=Migrate the database through scripts in db/migrate. Target specific version with VERSION=x. Turn off output with VERBOSE=false. / Migrate the database through scripts in db/migrate. Target specific version with VERSION=x. Turn off output with VERBOSE=false.
db\:migrate\:extensions=Run all Radiant extension migrations
db\:migrate\:redo=Rollbacks the database one migration and re migrate up. If you want to rollback more than one step, define STEP=x / Rollbacks the database one migration and re migrate up. If you want to rollback more than one step, define STEP=x
db\:migrate\:reset=Resets your database using your migrations for the current environment / Resets your database using your migrations for the current environment
db\:remigrate=Migrate schema to version 0 and back up again. WARNING: Destroys all data in tables!!
db\:remigrate\:extensions=Migrate down and back up all Radiant extension migrations
db\:reset=Drops and recreates the database from db/schema.rb for the current environment. / Drops and recreates the database from db/schema.rb for the current environment. / Drops and recreates the database from /Users/michi/Repositories/radiant-extranett/db/schema.rb for the current environment.
db\:rollback=Rolls the schema back to the previous version. Specify the number of steps with STEP=n / Rolls the schema back to the previous version. Specify the number of steps with STEP=n
db\:schema\:dump=Create a db/schema.rb file that can be portably used against any DB supported by AR / Create a /Users/michi/Repositories/radiant-extranett/db/schema.rb file that can be portably used against any DB supported by AR
db\:schema\:load=Load a schema.rb file into the database / Load a schema.rb file into the database
db\:sessions\:clear=Clear the sessions table / Clear the sessions table
db\:sessions\:create=Creates a sessions migration for use with CGI::Session::ActiveRecordStore / Creates a sessions migration for use with CGI::Session::ActiveRecordStore
db\:structure\:dump=Dump the database structure to a SQL file / Dump the database structure to a SQL file
db\:test\:clone=Recreate the test database from the current environment's database schema / Recreate the test database from the current environment's database schema
db\:test\:clone_structure=Recreate the test databases from the development structure / Recreate the test databases from the development structure
db\:test\:prepare=Prepare the test database and load the schema / Prepare the test database and load the schema
db\:test\:purge=Empty the test database / Empty the test database
db\:version=Retrieves the current schema version number / Retrieves the current schema version number
default=
development=Set the environment variable RAILS_ENV='development'.
doc=
doc/api=
doc/api/index.html=
doc/app=
doc/app/index.html=
doc\:app=Build the app HTML Files / Build the app HTML Files
doc\:clobber=
doc\:clobber_app=Remove rdoc products / Remove rdoc products
doc\:clobber_plugins=Remove plugin documentation / Remove plugin documentation
doc\:clobber_rails=Remove rdoc products / Remove rdoc products
doc\:plugins=Generate documentation for all installed plugins / Generate documentation for all installed plugins
doc\:rails=Build the rails HTML Files / Build the rails HTML Files
doc\:reapp=Force a rebuild of the RDOC files / Force a rebuild of the RDOC files
doc\:rerails=Force a rebuild of the RDOC files / Force a rebuild of the RDOC files
environment=
log\:clear=Truncates all *.log files in log/ to zero bytes / Truncates all *.log files in log/ to zero bytes
noop=
notes=Enumerate all annotations / Enumerate all annotations
notes\:fixme=Enumerate all FIXME annotations / Enumerate all FIXME annotations
notes\:optimize=Enumerate all OPTIMIZE annotations / Enumerate all OPTIMIZE annotations
notes\:todo=Enumerate all TODO annotations / Enumerate all TODO annotations
pkg=
pkg/radiant-0.6.9=
pkg/radiant-0.6.9.gem=
pkg/radiant-0.6.9.tgz=
pkg/radiant-0.6.9.zip=
production=Set the environment variable RAILS_ENV='production'.
radiant\:clobber=
radiant\:extensions\:archive\:migrate=Runs the migration of the Archive extension
radiant\:extensions\:archive\:update=Copies public assets of the Archive to the instance public/ directory.
radiant\:extensions\:copy_move\:install=Migrates and copies files in public/admin
radiant\:extensions\:copy_move\:migrate=Runs the migration of the CopyMove extension
radiant\:extensions\:copy_move\:update=Copies public assets of the CopyMove extension to the instance public/ directory.
radiant\:extensions\:dashboard\:migrate=Runs the migration of the Dashboard extension
radiant\:extensions\:dashboard\:update=Copies public assets of the Dashboard to the instance public/ directory.
radiant\:extensions\:gallery\:clean=
radiant\:extensions\:gallery\:create_config_file=Create gallery.yml file
radiant\:extensions\:gallery\:import_layouts=
radiant\:extensions\:gallery\:install=Migrates and copies files in public/admin
radiant\:extensions\:gallery\:migrate=Runs the migration of the Gallery extension
radiant\:extensions\:gallery\:package=
radiant\:extensions\:gallery\:release=
radiant\:extensions\:gallery\:stats=Report Gallery statistics
radiant\:extensions\:gallery\:update=Copies public assets of the Gallery to the instance public/ directory.
radiant\:extensions\:gallery\:version_0_7_0\:upgrade_filesystem_structure=
radiant\:extensions\:iphone\:install=Installs the iphone extension.
radiant\:extensions\:iphone\:migrate=Runs the migration of the Iphone extension
radiant\:extensions\:iphone\:update=Copies public assets of the Iphone to the instance public/ directory.
radiant\:extensions\:markdown_filter\:migrate=Runs the migration of the Markdown Filter extension
radiant\:extensions\:markdown_filter\:update=Copies public assets of the Markdown Filter to the instance public/ directory.
radiant\:extensions\:multi_site\:migrate=Runs the migration of the Multi Site extension
radiant\:extensions\:multi_site\:update=Copies public assets of the Multi Site to the instance public/ directory.
radiant\:extensions\:navigation_tags\:migrate=Runs the migration of the Navigation Tags extension
radiant\:extensions\:page_list_view\:migrate=Runs the migration of the Page List View extension
radiant\:extensions\:page_list_view\:update=Copies public assets of the Page List View to the instance public/ directory.
radiant\:extensions\:paperclipped\:migrate=Runs the migration of the Assets extension
radiant\:extensions\:paperclipped\:update=Copies public assets of the Assets to the instance public/ directory.
radiant\:extensions\:paperclipped_multisite\:migrate=Runs the migration of the Paperclipped Multisite extension
radiant\:extensions\:paperclipped_multisite\:update=Copies public assets of the Paperclip Multisite to the instance public/ directory.
radiant\:extensions\:ray\:migrate=
radiant\:extensions\:ray\:update=
radiant\:extensions\:reorder\:migrate=Runs the migration of the Reorder extension
radiant\:extensions\:reorder\:update=Copies public assets of the Reorder to the instance public/ directory.
radiant\:extensions\:settings\:migrate=Runs the migration of the Settings extension
radiant\:extensions\:settings\:update=Copies public assets of the Settings to the instance public/ directory.
radiant\:extensions\:share_layouts\:migrate=Runs the migration of the Share Layouts extension
radiant\:extensions\:tags\:install=Runs the migration and update tasks of the Tags extension
radiant\:extensions\:tags\:migrate=Runs the migration of the Tags extension
radiant\:extensions\:tags\:update=Copy needed files to public dir
radiant\:extensions\:templates\:migrate=Runs the migration of the Templates extension
radiant\:extensions\:templates\:update=Copies public assets of the Templates to the instance public/ directory.
radiant\:extensions\:update_all=Runs update asset task for all extensions / Runs update asset task for all extensions / Runs update asset task for all extensions
radiant\:extensions\:upload_manager\:update=Copies public assets to the instance public/ directory.
radiant\:extensions\:wym_editor_filter\:install=Copy needed files to public dir
radiant\:extensions\:wym_editor_filter\:migrate=Runs the migration of the Wym Editor Filter extension
radiant\:extensions\:wym_editor_filter\:update=Update public files except wym.css
radiant\:freeze\:edge=Lock to latest Edge Radiant or a specific revision with REVISION=X (ex: REVISION=245484e), a tag with TAG=Y (ex: TAG=0.6.6), or a branch with BRANCH=Z (ex: BRANCH=mental)
radiant\:freeze\:gems=Lock this application to the current gems (by unpacking them into vendor/radiant)
radiant\:gem=Build the gem file radiant-0.6.9.gem
radiant\:gem\:install=Build and install Gem from source
radiant\:gem\:uninstall=Uninstall Gem
radiant\:help=Shows some help information
radiant\:unfreeze=Unlock this application from freeze of gems or edge and return to a fluid use of system gems
radiant\:update=Update both configs, scripts and public/javascripts from Radiant
radiant\:update\:configs=Update config/boot.rb from your current radiant install
radiant\:update\:images=Update admin images from your current radiant install
radiant\:update\:javascripts=Update your javascripts from your current radiant install
radiant\:update\:scripts=Add new scripts to the instance script/ directory
radiant\:update\:stylesheets=Update admin stylesheets from your current radiant install
ray\:assets=Install the Paperclipped Asset Manager.
ray\:attachments=Install the Page Attachments extension.
ray\:bundle=Install an extension bundle.
ray\:dis=Disable an extension.
ray\:edge=Install the latest Edge Radiant.
ray\:en=Enable an extension.
ray\:ext=Install an extension from GitHub.
ray\:extension\:bundle_install=
ray\:extension\:disable=
ray\:extension\:enable=
ray\:extension\:help=
ray\:extension\:install=
ray\:extension\:markdown=
ray\:extension\:page_attachments=
ray\:extension\:paperclipped=
ray\:extension\:pull=
ray\:extension\:remove=
ray\:extension\:search=
ray\:git=Have Ray set your download preference (HTTP/GIT).
ray\:help=Install the Help documentation extension.
ray\:instance=Revert from Edge Radiant to your latest gem version.
ray\:markdown=Install the RDiscount Markdown filter.
ray\:pull=Merge all remotes of an extension.
ray\:radiant\:branch=
ray\:radiant\:edge=
ray\:radiant\:instance=
ray\:radiant\:tag=
ray\:restart=Restart your server.
ray\:rm=Delete an extension and remove migrations.
ray\:search=Search extensions by keyword.
ray\:setup=Run Ray's initial setup tasks.
ray\:setup\:download=
ray\:setup\:initial=
ray\:setup\:restart=
ray\:setup\:update=
ray\:update=Update to Ray 1.1
routes=Print out all defined routes in match order, with names. / Print out all defined routes in match order, with names.
secret=Generate a crytographically secure secret key. This is typically used to generate a secret for cookie sessions. Pass a unique identifier to the generator using ID="some unique identifier" for greater security. / Generate a crytographically secure secret key. This is typically used to generate a secret for cookie sessions. Pass a unique identifier to the generator using ID="some unique identifier" for greater security.
spec=Run all specs in spec directory (excluding plugin specs)
spec\:clobber=
spec\:clobber_rcov=Remove rcov products for rcov
spec\:controllers=Run the specs under spec/controllers
spec\:db\:fixtures\:load=Load fixtures (from spec/fixtures) into the current environment's database.  Load specific fixtures using FIXTURES=x,y
spec\:doc=Print Specdoc for all specs (excluding plugin specs)
spec\:extensions=Runs specs on all available Radiant extensions, pass EXT=extension_name to test a single extension
spec\:helpers=Run the specs under spec/helpers
spec\:lib=Run the specs under spec/lib
spec\:models=Run the specs under spec/models
spec\:plugin_doc=Print Specdoc for all plugin specs
spec\:plugins=Run the specs under vendor/plugins (except RSpec's own)
spec\:plugins\:rspec_on_rails=Runs the examples for rspec_on_rails
spec\:rcov=Run all specs in spec directory with RCov (excluding plugin specs)
spec\:server\:restart=reload spec_server.
spec\:server\:start=start spec_server.
spec\:server\:stop=stop spec_server.
spec\:statsetup=
spec\:translate=Translate/upgrade specs using the built-in translator
spec\:views=Run the specs under spec/views
stats=Report code statistics (KLOCs, etc) from the application / Report code statistics (KLOCs, etc) from the application
test=Test all units and functionals / Test all units and functionals
test\:extensions=Runs tests on all available Radiant extensions, pass EXT=extension_name to test a single extension
test\:functionals=Run tests for functionalsdb:test:prepare / Run the functional tests in test/functional / Run tests for functionalsdb:test:prepare / Run the functional tests in test/functional
test\:integration=Run tests for integrationdb:test:prepare / Run the integration tests in test/integration / Run tests for integrationdb:test:prepare / Run the integration tests in test/integration
test\:plugins=Run tests for pluginsenvironment / Run the plugin tests in vendor/plugins/*/**/test (or specify with PLUGIN=name) / Run tests for pluginsenvironment / Run the plugin tests in vendor/plugins/*/**/test (or specify with PLUGIN=name)
test\:recent=Run tests for recentdb:test:prepare / Test recent changes / Run tests for recentdb:test:prepare / Test recent changes
test\:uncommitted=Run tests for uncommitteddb:test:prepare / Test changes since last checkin (only Subversion) / Run tests for uncommitteddb:test:prepare / Test changes since last checkin (only Subversion)
test\:units=Run tests for unitsdb:test:prepare / Run the unit tests in test/unit / Run tests for unitsdb:test:prepare / Run the unit tests in test/unit
tmp\:cache\:clear=Clears all files and directories in tmp/cache / Clears all files and directories in tmp/cache
tmp\:clear=Clear session, cache, and socket files from tmp/ / Clear session, cache, and socket files from tmp/
tmp\:create=Creates tmp directories for sessions, cache, and sockets / Creates tmp directories for sessions, cache, and sockets
tmp\:pids\:clear=Clears all files in tmp/pids / Clears all files in tmp/pids
tmp\:sessions\:clear=Clears all files in tmp/sessions / Clears all files in tmp/sessions
tmp\:sockets\:clear=Clears all files in tmp/sockets / Clears all files in tmp/sockets
